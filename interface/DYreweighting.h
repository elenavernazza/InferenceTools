#ifndef DYreweighting_h
#define DYreweighting_h

// -------------------------------------------------------------------------------------------------------------- //
//                                                                                                                //
//   class DYreweighting                                                                                          //
//                                                                                                                //
//                                                                                                                //
//   Author: Jaime Leon Holgado                                                                                   //
//   CIEMAT, January 2022                                                                                         //
//                                                                                                                //
// -------------------------------------------------------------------------------------------------------------- //

#include <vector>
#include <TLorentzVector.h>

// DYreweighting class
class DYreweighting {

  public:
    DYreweighting (int year);
    
    ~DYreweighting ();
    
    
    float get_stitching_weight(int LHE_Nb, int LHE_Njets, float LHE_HT);
    std::vector<float> get_dy_scale(
      std::vector<float> GenJet_pt,
      std::vector<float> GenJet_eta,
      std::vector<float> GenJet_phi,
      std::vector<float> GenJet_mass,
      std::vector<int> GenJet_hadronFlavour,
      int LHE_Nb,
      std::vector<float> GenPart_pt,
      std::vector<float> GenPart_eta,
      std::vector<float> GenPart_phi,
      std::vector<float> GenPart_mass,
      std::vector<int> GenPart_statusFlags,
      std::vector<int> GenPart_pdgId);

  private:
  
    std::vector<std::vector<std::vector<float>>> stitchWeights;
    
    std::vector<std::vector<std::vector<float>>> stitchWeights_2016 = {
     {
      {2.0214652898 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0}
     },
     {
      {0.651052057245 , 0.413673961171 , 0.367765842648 , 0.180094896131 , 0.0343370323359 , 0.00954032131527 , 0.0131222173306 , 0.0301711237283 , 0.0},
      {0.529309657185 , 0.36056089643 , 0.325974171258 , 0.171534260884 , 0.032466795382 , 0.00945749305561 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0}
     },
     {
      {0.675950344672 , 0.32568221353 , 0.367040675149 , 0.183009066172 , 0.0302107942635 , 0.00813438859745 , 0.010611777963 , 0.0121964424085 , 0.000440030333986},
      {0.543306873307 , 0.270506289373 , 0.325796314916 , 0.171988010161 , 0.0332961566334 , 0.0095407955011 , 0.0130271573311 , 0.0120330765125 , 0.0},
      {0.180013628884 , 0.137599927721 , 0.146390493132 , 0.106846640414 , 0.0294570461364 , 0.00933979747754 , 0.0126186010222 , 0.0273170985108 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0}
     },
     {
      {0.687846534123 , 0.684357797036 , 0.368600440603 , 0.184644952054 , 0.0325122136015 , 0.00903182959861 , 0.0126509994188 , 0.0121787743827 , 0.000439986122197},
      {0.548446673425 , 0.55167674792 , 0.323846695197 , 0.17286177231 , 0.0310999917786 , 0.00954461685366 , 0.0131195412843 , 0.0122281273404 , 0.0},
      {0.178839898433 , 0.176730904692 , 0.143502984814 , 0.10389780536 , 0.0272513863363 , 0.00926873148301 , 0.0125267798314 , 0.0118359212397 , 0.000440227789824},
      {0.172146093067 , 0.158826579438 , 0.148762921015 , 0.0993078479982 , 0.0287760064141 , 0.0110900618719 , 0.0808586115919 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0}
     },
     {
      {0.565852537358 , 0.555308359906 , 0.332153310173 , 0.177960897092 , 0.0329882787666 , 0.00966903303917 , 0.0132228883753 , 0.0121844339873 , 0.000439991106937},
      {0.459317720411 , 0.473586356073 , 0.300262722228 , 0.16693007398 , 0.0322685431248 , 0.0101707397812 , 0.0139390193892 , 0.0120488117338 , 0.000440227789824},
      {0.166792535552 , 0.159897213879 , 0.134436541077 , 0.0974169614957 , 0.0275952936974 , 0.00917495710406 , 0.0124667137942 , 0.0115604601835 , 0.000439584558103},
      {0.120684494913 , 0.160067100927 , 0.127573323042 , 0.103097020825 , 0.0289775329435 , 0.00911453729911 , 0.0123809947417 , 0.0110458533678 , 0.0},
      {0.0 , 0.147420721388 , 0.121311850905 , 0.0852340906631 , 0.0285843898605 , 0.00897584049423 , 0.0125724757035 , 0.0 , 0.0}
     }
    };
    
    std::vector<std::vector<std::vector<float>>> stitchWeights_2017 = {
     {
      {2.67924942929 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0}
     },
     {
      {0.461117683668 , 0.288238720368 , 0.244019240573 , 0.135712598664 , 0.0269283578771 , 0.00941836691982 , 0.0114129617531 , 0.011988459216 , 0.0},
      {0.461212654939 , 0.290136436976 , 0.244986053293 , 0.136124152655 , 0.0279796670743 , 0.00930161903327 , 0.0110697147831 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0}
     },
     {
      {0.949886615633 , 0.427077416714 , 0.337222105969 , 0.163365897405 , 0.0274860094365 , 0.0085763948538 , 0.00984568261813 , 0.0127266252667 , 0.000332160869},
      {0.951726921973 , 0.426627652639 , 0.337677509383 , 0.165532173003 , 0.0276083457065 , 0.00946915409563 , 0.0115775376776 , 0.0128101172201 , 0.00033226404057},
      {0.121324851414 , 0.106045639829 , 0.100815528572 , 0.0780316234378 , 0.0247725227854 , 0.00901472262325 , 0.0110643844762 , 0.0124032384969 , 0.00033226404057},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0}
     },
     {
      {0.577067228092 , 0.339488860229 , 0.281949193594 , 0.150675590712 , 0.0284045541296 , 0.00901824980452 , 0.0109304611343 , 0.0123845395413 , 0.000332089281822},
      {0.556659233845 , 0.340642946262 , 0.280794949338 , 0.151779081379 , 0.0299185936652 , 0.00939894134359 , 0.0115118981289 , 0.0125472761053 , 0.00033226404057},
      {0.110789928447 , 0.0988388485028 , 0.0928127275372 , 0.0725867160614 , 0.0232600189656 , 0.00885064768037 , 0.0106222671228 , 0.0115267375239 , 0.00033226404057},
      {0.112408736859 , 0.0931192442339 , 0.0896787822135 , 0.0622383718531 , 0.0222605939937 , 0.00885290573742 , 0.0107109740262 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0}
     },
     {
      {0.265905408184 , 0.318351907391 , 0.277460603301 , 0.14951447431 , 0.0286698923867 , 0.00952507054503 , 0.0115701542716 , 0.0125887043617 , 0.000332055200272},
      {0.676589412083 , 0.319984941653 , 0.27316522003 , 0.146338413189 , 0.0288698984769 , 0.00939038668954 , 0.0109420127173 , 0.0125827030236 , 0.000332070131004},
      {0.139908908454 , 0.0900754237066 , 0.0886977006279 , 0.0706148949084 , 0.0237342746423 , 0.00840780447228 , 0.0108117809972 , 0.0115681226813 , 0.000331184452335},
      {0.109026527077 , 0.0983207166623 , 0.0923879113549 , 0.0763313187779 , 0.0238773034326 , 0.0088172397373 , 0.0103986787623 , 0.0114508669773 , 0.00033226404057},
      {0.081627606458 , 0.103082430047 , 0.0890246573134 , 0.0766960714492 , 0.0240498812676 , 0.00865341559255 , 0.0103416300943 , 0.0104291494869 , 0.00033226404057}
     }
    };

  
    std::vector<std::vector<std::vector<float>>> stitchWeights_2018 = {
     {
      {2.67333612809 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0}
     },
     {
      {0.51898547586 , 0.307918393636 , 0.299712383744 , 0.152457027204 , 0.017727351316 , 0.00960959105875 , 0.0118479734376 , 0.0153247097079 , 0.0},
      {0.521376206466 , 0.308647458404 , 0.305485779629 , 0.152859451028 , 0.0176935784475 , 0.0096261248727 , 0.0121070399122 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0}
     },
     {
      {0.580157109833 , 0.323048584481 , 0.316235063773 , 0.155031902758 , 0.0166252750008 , 0.00929109993408 , 0.0119071053391 , 0.0155571504236 , 0.000294085695839},
      {0.576159635871 , 0.32225013185 , 0.317509585462 , 0.156832157172 , 0.0176872450509 , 0.00959797340356 , 0.0119359304201 , 0.0116739568912 , 0.000294219655312},
      {0.114285902101 , 0.0983303196122 , 0.0960268363933 , 0.0716322046668 , 0.0160449241071 , 0.00911109415307 , 0.0113069937242 , 0.0141381182245 , 0.000294219655312},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0}
     },
     {
      {0.682278722716 , 0.362765385278 , 0.352621143228 , 0.165382670894 , 0.0174462106614 , 0.00958560178972 , 0.0113611990133 , 0.0155822731809 , 0.00029419199659},
      {0.658904274958 , 0.355925643213 , 0.346908775498 , 0.160894989801 , 0.0172806075072 , 0.00961908326477 , 0.0118871488334 , 0.015698805782 , 0.000294219655312},
      {0.116329810304 , 0.103266407792 , 0.101348794702 , 0.0755949912983 , 0.0146934201983 , 0.00901755115964 , 0.0110541461103 , 0.0145892891019 , 0.000294219655312},
      {0.11037555227 , 0.0943817218953 , 0.0935595693025 , 0.0707927004997 , 0.0158861665046 , 0.00910876641137 , 0.0109700992432 , 0.0 , 0.0},
      {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0}
     },
     {
      {0.39949438878 , 0.374723947015 , 0.376569839917 , 0.172402895473 , 0.0180531001354 , 0.00967811533818 , 0.0120470434947 , 0.0155848428971 , 0.000294072214121},
      {0.414012232227 , 0.373314693384 , 0.376696425396 , 0.171730043145 , 0.0186814560654 , 0.0095357673104 , 0.0119075584174 , 0.015490698255 , 0.000293965944772},
      {0.116854871611 , 0.0868542494347 , 0.0907644237315 , 0.0698678272198 , 0.0146930461579 , 0.00814494915235 , 0.011051375833 , 0.014209820022 , 0.000293717221136},
      {0.116039136671 , 0.0967397955117 , 0.0961209059992 , 0.0706452766584 , 0.0156626168091 , 0.00902743165164 , 0.0108147123949 , 0.014651354602 , 0.000294219655312},
      {0.0 , 0.0928514258164 , 0.0892665638494 , 0.0675120069126 , 0.0156701331724 , 0.00894531805894 , 0.0111842302729 , 0.01400886702 , 0.0}
     }
    };

    // Computed in 2019 for 2018 data with deepFlavor - NOT USED for Legacy
    const float DYscale_LL[3] = {0.748154, 2.15445, 1.63619} ; // for now we use the same numbers computed with DY NLO sample
    const float DYscale_MM[3] = {0.862686, 1.08509, 1.10947} ; // for now we use the same numbers computed with DY NLO sample

    std::vector<float> DYscale_MH_vLowPt, DYscale_MH_LowPt, DYscale_MH_Med1Pt;
    std::vector<float> DYscale_MH_Med2Pt, DYscale_MH_HighPt, DYscale_MH_vHighPt;

    std::vector<float> DYscale_MH_vLowPt_2016 = {1.161, 0.515, 0.1};
    std::vector<float> DYscale_MH_LowPt_2016 = {1.151, 1.042, 1.150};
    std::vector<float> DYscale_MH_Med1Pt_2016 = {1.144, 1.152, 1.149};
    std::vector<float> DYscale_MH_Med2Pt_2016 = {1.151, 1.333, 1.218};
    std::vector<float> DYscale_MH_HighPt_2016 = {1.169, 1.458, 0.997};
    std::vector<float> DYscale_MH_vHighPt_2016 = {1.061, 1.963, 1.185};

    std::vector<float> DYscale_MH_vLowPt_2017 = {1.125, 0.01 , 0.01 };
    std::vector<float> DYscale_MH_LowPt_2017 = {1.326, 1.208, 1.016};
    std::vector<float> DYscale_MH_Med1Pt_2017 = {1.255, 1.317, 1.279};
    std::vector<float> DYscale_MH_Med2Pt_2017 = {1.198, 1.409, 1.374};
    std::vector<float> DYscale_MH_HighPt_2017 = {1.081, 1.687, 1.269};
    std::vector<float> DYscale_MH_vHighPt_2017 = {0.859, 1.595, 1.270};

    std::vector<float> DYscale_MH_vLowPt_2018 = {1.002, 0.01, 0.01};
    std::vector<float> DYscale_MH_LowPt_2018 = {1.209, 1.180, 1.162};
    std::vector<float> DYscale_MH_Med1Pt_2018 = {1.17 , 1.260, 1.288};
    std::vector<float> DYscale_MH_Med2Pt_2018 = {1.140, 1.357, 1.574};
    std::vector<float> DYscale_MH_HighPt_2018 = {1.037, 1.440, 1.603};
    std::vector<float> DYscale_MH_vHighPt_2018 = {0.835, 1.994, 1.037};

    std::vector<float> DYscale_MTT_vLowPt, DYscale_MTT_LowPt, DYscale_MTT_Med1Pt;
    std::vector<float> DYscale_MTT_Med2Pt, DYscale_MTT_HighPt, DYscale_MTT_vHighPt;

    std::vector<float> DYscale_MTT_vLowPt_2016 = {1.1630144, 0.010000393, 0.010000000};
    std::vector<float> DYscale_MTT_LowPt_2016 = {1.2194740, 1.1250249, 1.0609708};
    std::vector<float> DYscale_MTT_Med1Pt_2016 = {1.2536864, 1.2376837, 1.1901911};
    std::vector<float> DYscale_MTT_Med2Pt_2016 = {1.2763251, 1.2972053, 1.2731480};
    std::vector<float> DYscale_MTT_HighPt_2016 = {1.2785250, 1.4578434, 1.2241989};
    std::vector<float> DYscale_MTT_vHighPt_2016 = {1.1649714, 1.6778047, 1.1510545};

    std::vector<float> DYscale_MTT_vLowPt_2017 = {1.1092067, 0.010000025, 0.010000002};
    std::vector<float> DYscale_MTT_LowPt_2017 = {1.4229782, 0.025083862, 0.64151569};
    std::vector<float> DYscale_MTT_Med1Pt_2017 = {1.3143450, 1.0076030, 0.96584965};
    std::vector<float> DYscale_MTT_Med2Pt_2017 = {1.2485879, 1.2376612, 1.0745893};
    std::vector<float> DYscale_MTT_HighPt_2017 = {1.1273438, 1.5564765, 1.0578688};
    std::vector<float> DYscale_MTT_vHighPt_2017 = {0.87293424, 1.4469675, 1.1665250};
    
    std::vector<float> DYscale_MTT_vLowPt_2018 = {0.87720949, 0.010000006, 0.010000025};
    std::vector<float> DYscale_MTT_LowPt_2018 = {1.2191486, 0.010001064, 0.29051790 };
    std::vector<float> DYscale_MTT_Med1Pt_2018 = {1.1816037, 0.82760074, 0.84809836 };
    std::vector<float> DYscale_MTT_Med2Pt_2018 = {1.1579303, 1.1240148, 0.92974364 };
    std::vector<float> DYscale_MTT_HighPt_2018 = {1.0469869, 1.3690206, 1.0024774  };
    std::vector<float> DYscale_MTT_vHighPt_2018 = {0.80838089, 1.7465338, 0.73211715 };

    std::vector<float> DYscale_MTT_vLowPt_err, DYscale_MTT_LowPt_err, DYscale_MTT_Med1Pt_err;
    std::vector<float> DYscale_MTT_Med2Pt_err, DYscale_MTT_HighPt_err, DYscale_MTT_vHighPt_err;

    std::vector<float> DYscale_MTT_vLowPt_err_2016 = {0.0037446320, 0.011371985, 0.0071346649};
    std::vector<float> DYscale_MTT_LowPt_err_2016 = {0.0017404799, 0.023737485, 0.035623816};
    std::vector<float> DYscale_MTT_Med1Pt_err_2016 = {0.0027420531, 0.034357252, 0.043622931};
    std::vector<float> DYscale_MTT_Med2Pt_err_2016 = {0.0042018892, 0.055512921, 0.061654929};
    std::vector<float> DYscale_MTT_HighPt_err_2016 = {0.0045670912, 0.065499641, 0.064115483};
    std::vector<float> DYscale_MTT_vHighPt_err_2016 = {0.0084286985, 0.17367880, 0.13585326};
    
    std::vector<float> DYscale_MTT_vLowPt_err_2017 = {0.0020977215, 0.0014144677, 0.0015785401};
    std::vector<float> DYscale_MTT_LowPt_err_2017 = {0.0018789754, 0.028074073, 0.033416855};
    std::vector<float> DYscale_MTT_Med1Pt_err_2017 = {0.0022982702, 0.028221735, 0.032660541};
    std::vector<float> DYscale_MTT_Med2Pt_err_2017 = {0.0019811270, 0.024603319, 0.024254387};
    std::vector<float> DYscale_MTT_HighPt_err_2017 = {0.0030012172, 0.046576904, 0.035949714};
    std::vector<float> DYscale_MTT_vHighPt_err_2017 = {0.0061768066, 0.15213682, 0.091582069};

    std::vector<float> DYscale_MTT_vLowPt_err_2018 = {0.0014349486, 0.00085205781, 0.00094359815};
    std::vector<float> DYscale_MTT_LowPt_err_2018 = {0.0013417125, 0.0044914533, 0.025179988};
    std::vector<float> DYscale_MTT_Med1Pt_err_2018 = {0.0016262942, 0.021066553, 0.025609469};
    std::vector<float> DYscale_MTT_Med2Pt_err_2018 = {0.0014769770, 0.018984114, 0.019089746};
    std::vector<float> DYscale_MTT_HighPt_err_2018 = {0.0022691835, 0.035830965, 0.027803721};
    std::vector<float> DYscale_MTT_vHighPt_err_2018 = {0.0046517215, 0.11443309 , 0.064519398};
};

#endif // DYreweighting_h